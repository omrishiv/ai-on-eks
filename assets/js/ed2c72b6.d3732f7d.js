"use strict";(self.webpackChunkdoeks_website=self.webpackChunkdoeks_website||[]).push([[9254],{2786:(e,n,s)=>{s.d(n,{A:()=>r});const r=s.p+"assets/images/architecture-fded4dc1757c346871876738a317721f.jpg"},28453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>l});var r=s(96540);const i={},o=r.createContext(i);function t(e){const n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(o.Provider,{value:n},e.children)}},94171:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>t,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"infra/inference-ready-cluster","title":"Inference-Ready EKS Cluster","description":"The Inference-Ready EKS Cluster is a pre-configured infrastructure solution designed specifically for AI/ML inference","source":"@site/docs/infra/inference-ready-cluster.md","sourceDirName":"infra","slug":"/infra/inference-ready-cluster","permalink":"/ai-on-eks/docs/infra/inference-ready-cluster","draft":false,"unlisted":false,"editUrl":"https://github.com/awslabs/ai-on-eks/blob/main/website/docs/infra/inference-ready-cluster.md","tags":[],"version":"current","frontMatter":{"sidebar_label":"Inference-Ready Cluster"},"sidebar":"infra","previous":{"title":"EMR NVIDIA Spark-RAPIDS","permalink":"/ai-on-eks/docs/infra/emr-spark-rapids"},"next":{"title":"JupyterHub on EKS","permalink":"/ai-on-eks/docs/infra/jupyterhub"}}');var i=s(74848),o=s(28453);const t={sidebar_label:"Inference-Ready Cluster"},l="Inference-Ready EKS Cluster",a={},d=[{value:"Why?",id:"why",level:2},{value:"Use Cases",id:"use-cases",level:2},{value:"Introduction",id:"introduction",level:2},{value:"Resources",id:"resources",level:2},{value:"Core Infrastructure",id:"core-infrastructure",level:3},{value:"EKS Add-ons",id:"eks-add-ons",level:3},{value:"AI/ML Specific Components",id:"aiml-specific-components",level:3},{value:"Observability Stack",id:"observability-stack",level:3},{value:"AIBrix Components",id:"aibrix-components",level:3},{value:"Deployment",id:"deployment",level:2},{value:"Architecture Diagram",id:"architecture-diagram",level:3},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Step 0: Clone and Navigate",id:"step-0-clone-and-navigate",level:3},{value:"Step 1: (Optional) Configure Variables",id:"step-1-optional-configure-variables",level:3},{value:"Step 2: Deploy Infrastructure",id:"step-2-deploy-infrastructure",level:3},{value:"Step 3: VPC",id:"step-3-vpc",level:3},{value:"Step 4: EKS",id:"step-4-eks",level:3},{value:"Step 5: EKS add-ons",id:"step-5-eks-add-ons",level:3},{value:"Step 6: Observability",id:"step-6-observability",level:3},{value:"Step 7: Cluster Ready",id:"step-7-cluster-ready",level:3},{value:"Step 8: Verify Deployment",id:"step-8-verify-deployment",level:3},{value:"Inference on EKS",id:"inference-on-eks",level:2},{value:"Inference Charts Integration",id:"inference-charts-integration",level:3},{value:"Prerequisites for Inference Charts",id:"prerequisites-for-inference-charts",level:4},{value:"Supported Inference Patterns",id:"supported-inference-patterns",level:4},{value:"vLLM Deployments",id:"vllm-deployments",level:5},{value:"Ray-vLLM Deployments",id:"ray-vllm-deployments",level:5},{value:"AIBrix Deployments",id:"aibrix-deployments",level:5},{value:"Example Deployments",id:"example-deployments",level:3},{value:"Observability Integration",id:"observability-integration",level:3},{value:"Cost Optimization",id:"cost-optimization",level:3},{value:"Troubleshooting",id:"troubleshooting",level:3},{value:"Deployment Issues",id:"deployment-issues",level:3},{value:"1. Terraform Apply Failures",id:"1-terraform-apply-failures",level:4},{value:"2. EKS Cluster Creation Issues",id:"2-eks-cluster-creation-issues",level:4},{value:"Node and Pod Issues",id:"node-and-pod-issues",level:3},{value:"3. Pods Stuck in Pending State",id:"3-pods-stuck-in-pending-state",level:4},{value:"4. GPU Detection and Device Plugin Issues",id:"4-gpu-detection-and-device-plugin-issues",level:4},{value:"5. AWS Neuron Setup Issues",id:"5-aws-neuron-setup-issues",level:4},{value:"Model Deployment Issues",id:"model-deployment-issues",level:3},{value:"6. Model Download Failures",id:"6-model-download-failures",level:4},{value:"7. Out of Memory (OOM) Issues",id:"7-out-of-memory-oom-issues",level:4},{value:"Networking and Load Balancer Issues",id:"networking-and-load-balancer-issues",level:3},{value:"8. Service Connectivity Problems",id:"8-service-connectivity-problems",level:4},{value:"Monitoring and Observability Issues",id:"monitoring-and-observability-issues",level:3},{value:"9. Prometheus/Grafana Not Working",id:"9-prometheusgrafana-not-working",level:4},{value:"Performance and Scaling Issues",id:"performance-and-scaling-issues",level:3},{value:"10. Slow Model Inference",id:"10-slow-model-inference",level:4},{value:"General Debugging Commands",id:"general-debugging-commands",level:3},{value:"Getting Additional Help",id:"getting-additional-help",level:3}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components},{Details:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"inference-ready-eks-cluster",children:"Inference-Ready EKS Cluster"})}),"\n",(0,i.jsxs)(n.p,{children:["The Inference-Ready EKS Cluster is a pre-configured infrastructure solution designed specifically for AI/ML inference\nworkloads. This solution provides a Kubernetes cluster with all the necessary components to deploy and run inference\nservices using the AI on EKS ",(0,i.jsx)(n.a,{href:"/ai-on-eks/docs/blueprints/inference/inference-charts",children:"inference charts"})," or your own deployments\nand models."]}),"\n",(0,i.jsxs)(n.p,{children:["An expanded ",(0,i.jsx)(n.a,{href:"https://github.com/awslabs/ai-on-eks/tree/main/infra/solutions/inference-ready-cluster/README.md",children:"Readme"}),"\nis available that dives deep into the infrastructure. This page highlights the core components and reasoning for this\narchitecture."]}),"\n",(0,i.jsx)(n.h2,{id:"why",children:"Why?"}),"\n",(0,i.jsx)(n.p,{children:"This Inference-Ready EKS Cluster was created to enable anyone to use EKS for inference, no matter where they are on\ntheir journey. LLMs can be challenging to deploy: depending on the model size, architecture, capabilities, and your\nrequirements, different tools are needed to properly deploy, run, and scale the model. Additionally, you may want to run\nmodels that aren't just LLMs, such as text -> image diffusion models or more traditional Machine Learning models."}),"\n",(0,i.jsxs)(n.p,{children:["This infrastructure is meant to be the first layer of support. Alongside\nthe ",(0,i.jsx)(n.a,{href:"/ai-on-eks/docs/blueprints/inference/inference-charts",children:"Inference Charts"})," and the Guidance you'll also find in this\nrepository, AI on EKS aims to equip you with all the tools and knowledge you need to be able to run the inference you\nwant."]}),"\n",(0,i.jsx)(n.h2,{id:"use-cases",children:"Use Cases"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Single Model Testing"}),": If you just want to deploy a model and test it to see what it does or how well it does."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Multi-Node Distributed Inference"}),": If the model is too big to fit on a single node."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Model Autoscaling"}),": If you need to dynamically adjust the amount of models running based on incoming requests and\nqueue length."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Model Benchmarking"}),": If you want to understand how your model will perform on a given dataset with differing\ntraffic patterns. This helps you adjust the model parameters and replicas to meet your Service Level Objectives (\nSLOs)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Muti Model Architectures"}),": If you want to test both LLMs and text->image diffusion models."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsx)(n.p,{children:"This infrastructure creates an Amazon EKS cluster optimized for AI/ML inference workloads with the following key\nfeatures:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"KubeRay Operator"}),": Enables distributed Ray workloads for scalable inference"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"LeaderWorkerSet"}),": Enables multi-node distributed inference"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"AIBrix Stack"}),": Advanced inference optimization and management capabilities"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"GPU/Neuron Support"}),": Ready for both NVIDIA GPU and AWS Neuron (Inferentia/Trainium) workloads"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"AI/ML Observability Stack"}),": Comprehensive monitoring and observability for ML workloads"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Autoscaling"}),": Karpenter-based node autoscaling for cost optimization"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["The cluster is specifically designed to work seamlessly with the AI on\nEKS ",(0,i.jsx)(n.a,{href:"/ai-on-eks/docs/blueprints/inference/inference-charts",children:"Inference Charts"}),", providing a complete end-to-end solution for\ndeploying inference workloads."]}),"\n",(0,i.jsx)(n.h2,{id:"resources",children:"Resources"}),"\n",(0,i.jsx)(n.p,{children:"This infrastructure deploys the following AWS resources:"}),"\n",(0,i.jsx)(n.h3,{id:"core-infrastructure",children:"Core Infrastructure"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"https://aws.amazon.com/vpc/",children:"Amazon VPC"})})," with public and private subnets across multiple AZs"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"https://aws.amazon.com/eks/",children:"Amazon EKS Cluster"})})," (v1.33 by default)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"https://docs.aws.amazon.com/eks/latest/userguide/managed-node-groups.html",children:"EKS Managed Node Groups"})}),": Auto-scaling\ngroups of EC2 instances that serve as EKS compute nodes."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"NAT Gateways"})," for private subnet internet access"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Internet Gateway"})," for public subnet access"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Security Groups"})," with appropriate ingress/egress rules"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"eks-add-ons",children:"EKS Add-ons"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"https://aws.amazon.com/blogs/networking-and-content-delivery/deploying-aws-load-balancer-controller-on-amazon-eks/",children:"AWS Load Balancer Controller"})})," for ingress management"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"EBS CSI Driver"})," for persistent storage"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"VPC CNI"})," for pod networking"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"CoreDNS"})," for service discovery"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Kube-proxy"})," for service networking"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Metrics Server"})," for resource metrics"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Amazon CloudWatch Observability"})," for logging and monitoring"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"aiml-specific-components",children:"AI/ML Specific Components"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"KubeRay Operator"})," for distributed Ray workloads"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"LeaderWorkerSet"})," for multi-node distributed inference"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"NVIDIA Device Plugin"})," for GPU resource management"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"AWS Neuron Device Plugin"})," for Inferentia/Trainium support"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Karpenter"})," for intelligent node autoscaling"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"observability-stack",children:"Observability Stack"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Prometheus"})," for metrics collection"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Grafana"})," for visualization and dashboards"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"AlertManager"})," for alerting"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Node Exporter"})," for node-level metrics"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"DCGM Exporter"})," for GPU metrics (when GPU nodes are present)"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"aibrix-components",children:"AIBrix Components"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"AIBrix Core"})," for inference optimization"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Gateway and routing"})," for traffic management"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Performance monitoring"})," and optimization tools"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"deployment",children:"Deployment"}),"\n",(0,i.jsx)(n.h3,{id:"architecture-diagram",children:"Architecture Diagram"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"architecture",src:s(2786).A+"",width:"1408",height:"911"})}),"\n",(0,i.jsx)(n.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"AWS CLI"})," configured with appropriate permissions"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Terraform"})," (>= 1.0)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"kubectl"})," for cluster management"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Helm"})," (>= 3.0) for chart deployments"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"step-0-clone-and-navigate",children:"Step 0: Clone and Navigate"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/awslabs/ai-on-eks.git\ncd infra/solutions/inference-ready-cluster\n"})}),"\n",(0,i.jsx)(n.h3,{id:"step-1-optional-configure-variables",children:"Step 1: (Optional) Configure Variables"}),"\n",(0,i.jsxs)(n.p,{children:["Edit the ",(0,i.jsx)(n.code,{children:"terraform/blueprint.tfvars"})," file to customize your deployment:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-hcl",children:'name                             = "my-inference-cluster"\nregion                           = "us-west-2"\nenable_kuberay_operator          = true\nenable_ai_ml_observability_stack = true\nenable_aibrix_stack              = true\nenable_leader_worker_set         = true\navailability_zones_count         = 4\n'})}),"\n",(0,i.jsxs)(n.p,{children:["All variables can be found in the ",(0,i.jsxs)(n.a,{href:"https://github.com/awslabs/ai-on-eks/blob/main/infra/base/terraform/variables.tf",children:["\n",(0,i.jsx)(n.code,{children:"variables.tf"})," file"]})]}),"\n",(0,i.jsx)(n.h3,{id:"step-2-deploy-infrastructure",children:"Step 2: Deploy Infrastructure"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Run the installation script\n./install.sh\n"})}),"\n",(0,i.jsx)(n.p,{children:"The installation script will do the following automatically:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Copy the base Terraform configuration"}),"\n",(0,i.jsx)(n.li,{children:"Initialize Terraform"}),"\n",(0,i.jsx)(n.li,{children:"Plan and apply the infrastructure"}),"\n",(0,i.jsx)(n.li,{children:"Configure kubectl context"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"step-3-vpc",children:"Step 3: VPC"}),"\n",(0,i.jsx)(n.p,{children:"An Amazon Virtual Private Network (VPC) is provisioned and configured based on specified configuration. According to\nbest practices for Reliability, 4 Availability zones (AZs) are configured to provide the best chance of node acquisition\nand high availability. Topology awareness defaults to keep AI/ML workloads in the same AZ for performance/cost, but is\nconfigurable for availability."}),"\n",(0,i.jsx)(n.h3,{id:"step-4-eks",children:"Step 4: EKS"}),"\n",(0,i.jsx)(n.p,{children:"Amazon Elastic Kubernetes Service (EKS) cluster is provisioned with Managed Nodes Group (MNG) that run critical cluster\nadd-ons (CoreDNS, AWS Load Balancer Controller and Karpenter) on its compute nodes. Karpenter will manage compute\ncapacity to other EKS add-ons, as well as inference applications that will be deployed by user while prioritizing the\nmost cost-effective instances, per configuration."}),"\n",(0,i.jsx)(n.h3,{id:"step-5-eks-add-ons",children:"Step 5: EKS add-ons"}),"\n",(0,i.jsx)(n.p,{children:"Other important EKS add-ons (LWS, KubeRay etc.) are deployed based on the configurations defined in the per-environment\nTerraform configuration file (See Step 1 above)"}),"\n",(0,i.jsx)(n.h3,{id:"step-6-observability",children:"Step 6: Observability"}),"\n",(0,i.jsx)(n.p,{children:"An observability stack including FluentBit, Prometheus and Grafana is deployed to collect metrics and logs from the\nenvironment. Service and Pod Monitors are deployed to watch for AI/ML related workloads and collect metrics. Grafana\ndashboards are configured to automatically visualize the metrics and logs side by side."}),"\n",(0,i.jsx)(n.h3,{id:"step-7-cluster-ready",children:"Step 7: Cluster Ready"}),"\n",(0,i.jsxs)(n.p,{children:["Users can access EKS API and can deploy containerized AI/ML inference workloads via Kubernetes CLI using the AI on EKS\n",(0,i.jsx)(n.a,{href:"/ai-on-eks/docs/blueprints/inference/inference-charts",children:"inference charts"})," or other repositories by interacting with AWS Network\nLoad Balancer (NLB) endpoint."]}),"\n",(0,i.jsx)(n.h3,{id:"step-8-verify-deployment",children:"Step 8: Verify Deployment"}),"\n",(0,i.jsx)(n.p,{children:"To validate that everything deployed properly, you can run"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"kubectl get svc,pod,deployment -A\n"})}),"\n",(0,i.jsx)(n.p,{children:"You should see the following output (expand the section to see the output)"}),"\n",(0,i.jsx)(r,{children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"    NAMESPACE              NAME                                                             TYPE           CLUSTER-IP       EXTERNAL-IP                                                                     PORT(S)                                        AGE\n    aibrix-system          service/aibrix-controller-manager-metrics-service                ClusterIP      172.20.218.39    <none>                                                                          8080/TCP                                       13d\n    aibrix-system          service/aibrix-gateway-plugins                                   ClusterIP      172.20.142.245   <none>                                                                          50052/TCP                                      13d\n    aibrix-system          service/aibrix-gpu-optimizer                                     ClusterIP      172.20.14.220    <none>                                                                          8080/TCP                                       13d\n    aibrix-system          service/aibrix-kuberay-operator                                  ClusterIP      172.20.240.255   <none>                                                                          8080/TCP                                       13d\n    aibrix-system          service/aibrix-metadata-service                                  ClusterIP      172.20.252.24    <none>                                                                          8090/TCP                                       13d\n    aibrix-system          service/aibrix-redis-master                                      ClusterIP      172.20.155.43    <none>                                                                          6379/TCP                                       13d\n    argocd                 service/argocd-applicationset-controller                         ClusterIP      172.20.139.94    <none>                                                                          7000/TCP                                       13d\n    argocd                 service/argocd-dex-server                                        ClusterIP      172.20.127.60    <none>                                                                          5556/TCP,5557/TCP                              13d\n    argocd                 service/argocd-redis                                             ClusterIP      172.20.48.202    <none>                                                                          6379/TCP                                       13d\n    argocd                 service/argocd-repo-server                                       ClusterIP      172.20.232.147   <none>                                                                          8081/TCP                                       13d\n    argocd                 service/argocd-server                                            ClusterIP      172.20.233.191   <none>                                                                          80/TCP,443/TCP                                 13d\n    default                service/etcd-client                                              ClusterIP      172.20.47.224    <none>                                                                          2379/TCP                                       12d\n    default                service/etcd-server                                              ClusterIP      172.20.69.95     <none>                                                                          2379/TCP,2380/TCP                              12d\n    default                service/kubernetes                                               ClusterIP      172.20.0.1       <none>                                                                          443/TCP                                        13d\n    envoy-gateway-system   service/envoy-aibrix-system-aibrix-eg-903790dc                   ClusterIP      172.20.249.100   <none>                                                                          80/TCP                                         13d\n    envoy-gateway-system   service/envoy-gateway                                            ClusterIP      172.20.113.229   <none>                                                                          18000/TCP,18001/TCP,18002/TCP,19001/TCP        13d\n    ingress-nginx          service/ingress-nginx-controller                                 LoadBalancer   172.20.27.209    k8s-ingressn-ingressn-ffa534dcb1-b4b54bcc24eaeddd.elb.us-west-2.amazonaws.com   80:31646/TCP,443:32024/TCP                     13d\n    ingress-nginx          service/ingress-nginx-controller-admission                       ClusterIP      172.20.249.118   <none>                                                                          443/TCP                                        13d\n    karpenter              service/karpenter                                                ClusterIP      172.20.149.70    <none>                                                                          8080/TCP                                       13d\n    kube-system            service/aws-load-balancer-webhook-service                        ClusterIP      172.20.83.104    <none>                                                                          443/TCP                                        13d\n    kube-system            service/eks-extension-metrics-api                                ClusterIP      172.20.87.142    <none>                                                                          443/TCP                                        13d\n    kube-system            service/k8s-neuron-scheduler                                     ClusterIP      172.20.248.128   <none>                                                                          12345/TCP                                      13d\n    kube-system            service/kube-dns                                                 ClusterIP      172.20.0.10      <none>                                                                          53/UDP,53/TCP,9153/TCP                         13d\n    kube-system            service/kube-prometheus-stack-kubelet                            ClusterIP      None             <none>                                                                          10250/TCP,10255/TCP,4194/TCP                   13d\n    kuberay-operator       service/kuberay-operator                                         ClusterIP      172.20.117.159   <none>                                                                          8080/TCP                                       13d\n    lws-system             service/lws-controller-manager-metrics-service                   ClusterIP      172.20.17.186    <none>                                                                          8443/TCP                                       13d\n    lws-system             service/lws-webhook-service                                      ClusterIP      172.20.173.201   <none>                                                                          443/TCP                                        13d\n    monitoring             service/alertmanager-operated                                    ClusterIP      None             <none>                                                                          9093/TCP,9094/TCP,9094/UDP                     13d\n    monitoring             service/dcgm-exporter                                            ClusterIP      172.20.79.5      <none>                                                                          9400/TCP                                       13d\n    monitoring             service/fluent-bit                                               ClusterIP      172.20.111.213   <none>                                                                          2020/TCP                                       13d\n    monitoring             service/kube-prometheus-stack-alertmanager                       ClusterIP      172.20.45.163    <none>                                                                          9093/TCP,8080/TCP                              13d\n    monitoring             service/kube-prometheus-stack-coredns                            ClusterIP      None             <none>                                                                          9153/TCP                                       13d\n    monitoring             service/kube-prometheus-stack-grafana                            ClusterIP      172.20.251.144   <none>                                                                          80/TCP                                         13d\n    monitoring             service/kube-prometheus-stack-kube-controller-manager            ClusterIP      None             <none>                                                                          10257/TCP                                      13d\n    monitoring             service/kube-prometheus-stack-kube-etcd                          ClusterIP      None             <none>                                                                          2381/TCP                                       13d\n    monitoring             service/kube-prometheus-stack-kube-proxy                         ClusterIP      None             <none>                                                                          10249/TCP                                      13d\n    monitoring             service/kube-prometheus-stack-kube-scheduler                     ClusterIP      None             <none>                                                                          10259/TCP                                      13d\n    monitoring             service/kube-prometheus-stack-kube-state-metrics                 ClusterIP      172.20.81.57     <none>                                                                          8080/TCP                                       13d\n    monitoring             service/kube-prometheus-stack-operator                           ClusterIP      172.20.163.90    <none>                                                                          443/TCP                                        13d\n    monitoring             service/kube-prometheus-stack-prometheus                         ClusterIP      172.20.1.251     <none>                                                                          9090/TCP,8080/TCP                              13d\n    monitoring             service/kube-prometheus-stack-prometheus-node-exporter           ClusterIP      172.20.88.160    <none>                                                                          9100/TCP                                       13d\n    monitoring             service/my-cluster                                               ClusterIP      172.20.54.44     <none>                                                                          9200/TCP,9300/TCP,9600/TCP,9650/TCP            13d\n    monitoring             service/my-cluster-dashboards                                    ClusterIP      172.20.161.35    <none>                                                                          5601/TCP                                       13d\n    monitoring             service/my-cluster-masters                                       ClusterIP      None             <none>                                                                          9200/TCP,9300/TCP                              13d\n    monitoring             service/opencost                                                 ClusterIP      172.20.162.78    <none>                                                                          9003/TCP,9090/TCP                              13d\n    monitoring             service/opensearch-discovery                                     ClusterIP      None             <none>                                                                          9300/TCP                                       13d\n    monitoring             service/opensearch-operator-controller-manager-metrics-service   ClusterIP      172.20.183.236   <none>                                                                          8443/TCP                                       13d\n    monitoring             service/prometheus-operated                                      ClusterIP      None             <none>                                                                          9090/TCP                                       13d\n\n    NAMESPACE              NAME                                                                  READY   STATUS      RESTARTS        AGE\n    aibrix-system          pod/aibrix-controller-manager-5948f8f8b7-qjm7z                        1/1     Running     0               13d\n    aibrix-system          pod/aibrix-gateway-plugins-5978d98445-qj2jw                           1/1     Running     0               13d\n    aibrix-system          pod/aibrix-gpu-optimizer-64c978ddd8-bw7hk                             1/1     Running     0               13d\n    aibrix-system          pod/aibrix-kuberay-operator-8b65d7cc4-xrcm6                           1/1     Running     0               13d\n    aibrix-system          pod/aibrix-metadata-service-5499dc64b7-69tzc                          1/1     Running     0               13d\n    aibrix-system          pod/aibrix-redis-master-576767646c-w9lhl                              1/1     Running     0               13d\n    argocd                 pod/argocd-application-controller-0                                   1/1     Running     0               13d\n    argocd                 pod/argocd-applicationset-controller-6847f76cb8-svwvt                 1/1     Running     0               13d\n    argocd                 pod/argocd-dex-server-f6d74975f-g5rj8                                 1/1     Running     0               13d\n    argocd                 pod/argocd-notifications-controller-86f4bb887d-sgxlb                  1/1     Running     0               13d\n    argocd                 pod/argocd-redis-588f9bcd4d-9tncd                                     1/1     Running     0               13d\n    argocd                 pod/argocd-repo-server-5cbcc778f4-kd4ll                               1/1     Running     0               13d\n    argocd                 pod/argocd-server-7c9898bc58-vfqwn                                    1/1     Running     0               13d\n    envoy-gateway-system   pod/envoy-aibrix-system-aibrix-eg-903790dc-567ff75b87-22ctt           2/2     Running     0               13d\n    envoy-gateway-system   pod/envoy-gateway-6d7859b6bf-6hhf5                                    1/1     Running     0               13d\n    ingress-nginx          pod/ingress-nginx-controller-58f4c5584-wt6rk                          1/1     Running     0               13d\n    karpenter              pod/karpenter-849fd44788-4fgml                                        1/1     Running     0               13d\n    karpenter              pod/karpenter-849fd44788-zbm9z                                        1/1     Running     0               13d\n    kube-system            pod/aws-load-balancer-controller-c495bf799-crnlh                      1/1     Running     0               13d\n    kube-system            pod/aws-load-balancer-controller-c495bf799-nwkqv                      1/1     Running     0               13d\n    kube-system            pod/aws-node-6ff6l                                                    2/2     Running     0               8d\n    kube-system            pod/aws-node-728vt                                                    2/2     Running     0               2d16h\n    kube-system            pod/aws-node-87jfl                                                    2/2     Running     0               13d\n    kube-system            pod/aws-node-wtnlj                                                    2/2     Running     0               13d\n    kube-system            pod/aws-node-zzc4g                                                    2/2     Running     0               2d16h\n    kube-system            pod/coredns-7bf648ff5d-98bp4                                          1/1     Running     0               13d\n    kube-system            pod/coredns-7bf648ff5d-w56nm                                          1/1     Running     0               13d\n    kube-system            pod/ebs-csi-controller-5bdc7bfdb6-79658                               6/6     Running     0               13d\n    kube-system            pod/ebs-csi-controller-5bdc7bfdb6-958zf                               6/6     Running     0               13d\n    kube-system            pod/ebs-csi-node-4z2mb                                                3/3     Running     0               13d\n    kube-system            pod/ebs-csi-node-8qq2s                                                3/3     Running     0               2d16h\n    kube-system            pod/ebs-csi-node-q9h5r                                                3/3     Running     0               2d16h\n    kube-system            pod/ebs-csi-node-t77j9                                                3/3     Running     0               13d\n    kube-system            pod/ebs-csi-node-w9mh8                                                3/3     Running     0               8d\n    kube-system            pod/eks-pod-identity-agent-jjfz4                                      1/1     Running     0               13d\n    kube-system            pod/eks-pod-identity-agent-jthdk                                      1/1     Running     0               2d16h\n    kube-system            pod/eks-pod-identity-agent-ng556                                      1/1     Running     0               8d\n    kube-system            pod/eks-pod-identity-agent-q6ths                                      1/1     Running     0               2d16h\n    kube-system            pod/eks-pod-identity-agent-rwkr9                                      1/1     Running     0               13d\n    kube-system            pod/k8s-neuron-scheduler-56f6c8bd67-hbzgz                             1/1     Running     0               13d\n    kube-system            pod/kube-proxy-4wf7s                                                  1/1     Running     0               2d16h\n    kube-system            pod/kube-proxy-7dm2x                                                  1/1     Running     0               2d16h\n    kube-system            pod/kube-proxy-9d9cm                                                  1/1     Running     0               8d\n    kube-system            pod/kube-proxy-lt4sp                                                  1/1     Running     0               13d\n    kube-system            pod/kube-proxy-nklwj                                                  1/1     Running     0               13d\n    kube-system            pod/my-scheduler-6959876cb4-gprm5                                     1/1     Running     0               13d\n    kuberay-operator       pod/kuberay-operator-6d988d7dd9-ncx4h                                 1/1     Running     0               13d\n    lws-system             pod/lws-controller-manager-cbb85458b-7cvhr                            1/1     Running     0               13d\n    lws-system             pod/lws-controller-manager-cbb85458b-dqj8g                            1/1     Running     0               13d\n    monitoring             pod/alertmanager-kube-prometheus-stack-alertmanager-0                 2/2     Running     0               13d\n    monitoring             pod/fluent-bit-52m29                                                  1/1     Running     0               2d16h\n    monitoring             pod/fluent-bit-hb824                                                  1/1     Running     0               13d\n    monitoring             pod/fluent-bit-hsptw                                                  1/1     Running     0               13d\n    monitoring             pod/fluent-bit-nkmrq                                                  1/1     Running     0               8d\n    monitoring             pod/fluent-bit-qdsm2                                                  1/1     Running     0               2d16h\n    monitoring             pod/fluent-operator-7f75b8ccf4-z5924                                  1/1     Running     0               13d\n    monitoring             pod/kube-prometheus-stack-grafana-c64f79c4f-zqlm7                     3/3     Running     0               13d\n    monitoring             pod/kube-prometheus-stack-kube-state-metrics-77976dc6c4-fff28         1/1     Running     0               13d\n    monitoring             pod/kube-prometheus-stack-operator-6655669d75-4kh9s                   1/1     Running     0               13d\n    monitoring             pod/kube-prometheus-stack-prometheus-node-exporter-7xbrs              1/1     Running     0               13d\n    monitoring             pod/kube-prometheus-stack-prometheus-node-exporter-gwkb2              1/1     Running     0               13d\n    monitoring             pod/kube-prometheus-stack-prometheus-node-exporter-k6zl7              1/1     Running     0               2d16h\n    monitoring             pod/kube-prometheus-stack-prometheus-node-exporter-pl6m7              1/1     Running     0               2d16h\n    monitoring             pod/kube-prometheus-stack-prometheus-node-exporter-st9kp              1/1     Running     0               8d\n    monitoring             pod/opencost-bd64bfbf5-jbfvr                                          2/2     Running     0               13d\n    monitoring             pod/opensearch-dashboards-84675f8b9-6jd2h                             1/1     Running     0               13d\n    monitoring             pod/opensearch-dashboards-84675f8b9-9mcs2                             1/1     Running     0               13d\n    monitoring             pod/opensearch-masters-0                                              1/1     Running     0               13d\n    monitoring             pod/opensearch-masters-1                                              1/1     Running     0               8d\n    monitoring             pod/opensearch-masters-2                                              1/1     Running     0               8d\n    monitoring             pod/opensearch-operator-controller-manager-58b76955b9-w46gl           2/2     Running     0               13d\n    monitoring             pod/opensearch-securityconfig-update-4fdcz                            0/1     Completed   0               13d\n    monitoring             pod/prometheus-kube-prometheus-stack-prometheus-0                     2/2     Running     0               13d\n    nvidia-device-plugin   pod/nvidia-device-plugin-node-feature-discovery-master-77b96ddp8h25   1/1     Running     0               13d\n\n    NAMESPACE              NAME                                                                 READY   UP-TO-DATE   AVAILABLE   AGE\n    aibrix-system          deployment.apps/aibrix-controller-manager                            1/1     1            1           13d\n    aibrix-system          deployment.apps/aibrix-gateway-plugins                               1/1     1            1           13d\n    aibrix-system          deployment.apps/aibrix-gpu-optimizer                                 1/1     1            1           13d\n    aibrix-system          deployment.apps/aibrix-kuberay-operator                              1/1     1            1           13d\n    aibrix-system          deployment.apps/aibrix-metadata-service                              1/1     1            1           13d\n    aibrix-system          deployment.apps/aibrix-redis-master                                  1/1     1            1           13d\n    argocd                 deployment.apps/argocd-applicationset-controller                     1/1     1            1           13d\n    argocd                 deployment.apps/argocd-dex-server                                    1/1     1            1           13d\n    argocd                 deployment.apps/argocd-notifications-controller                      1/1     1            1           13d\n    argocd                 deployment.apps/argocd-redis                                         1/1     1            1           13d\n    argocd                 deployment.apps/argocd-repo-server                                   1/1     1            1           13d\n    argocd                 deployment.apps/argocd-server                                        1/1     1            1           13d\n    envoy-gateway-system   deployment.apps/envoy-aibrix-system-aibrix-eg-903790dc               1/1     1            1           13d\n    envoy-gateway-system   deployment.apps/envoy-gateway                                        1/1     1            1           13d\n    ingress-nginx          deployment.apps/ingress-nginx-controller                             1/1     1            1           13d\n    karpenter              deployment.apps/karpenter                                            2/2     2            2           13d\n    kube-system            deployment.apps/aws-load-balancer-controller                         2/2     2            2           13d\n    kube-system            deployment.apps/coredns                                              2/2     2            2           13d\n    kube-system            deployment.apps/ebs-csi-controller                                   2/2     2            2           13d\n    kube-system            deployment.apps/k8s-neuron-scheduler                                 1/1     1            1           13d\n    kube-system            deployment.apps/my-scheduler                                         1/1     1            1           13d\n    kuberay-operator       deployment.apps/kuberay-operator                                     1/1     1            1           13d\n    lws-system             deployment.apps/lws-controller-manager                               2/2     2            2           13d\n    monitoring             deployment.apps/fluent-operator                                      1/1     1            1           13d\n    monitoring             deployment.apps/kube-prometheus-stack-grafana                        1/1     1            1           13d\n    monitoring             deployment.apps/kube-prometheus-stack-kube-state-metrics             1/1     1            1           13d\n    monitoring             deployment.apps/kube-prometheus-stack-operator                       1/1     1            1           13d\n    monitoring             deployment.apps/opencost                                             1/1     1            1           13d\n    monitoring             deployment.apps/opensearch-dashboards                                2/2     2            2           13d\n    monitoring             deployment.apps/opensearch-operator-controller-manager               1/1     1            1           13d\n    nvidia-device-plugin   deployment.apps/nvidia-device-plugin-node-feature-discovery-master   1/1     1            1           13d\n"})})}),"\n",(0,i.jsx)(n.h2,{id:"inference-on-eks",children:"Inference on EKS"}),"\n",(0,i.jsxs)(n.p,{children:["EKS is a powerful platform for running AI/ML inference. For a deep dive on many of the inference possibilities on EKS,\nplease check the ",(0,i.jsx)(n.a,{href:"/ai-on-eks/docs/blueprints/inference/",children:"inference"})," section."]}),"\n",(0,i.jsx)(n.h3,{id:"inference-charts-integration",children:"Inference Charts Integration"}),"\n",(0,i.jsx)(n.p,{children:"This infrastructure is specifically designed to work with the AI on EKS Inference Charts. The cluster provides all the\nnecessary components and configurations for seamless deployment of inference workloads."}),"\n",(0,i.jsx)(n.h4,{id:"prerequisites-for-inference-charts",children:"Prerequisites for Inference Charts"}),"\n",(0,i.jsx)(n.p,{children:"The infrastructure automatically provides:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"KubeRay Operator"})," - Required for Ray-vLLM deployments"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"GPU/Neuron Device Plugins"})," - For hardware resource management"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Observability Stack"})," - Prometheus and Grafana for monitoring"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"AIBrix Integration"})," - For inference optimization and management"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"supported-inference-patterns",children:"Supported Inference Patterns"}),"\n",(0,i.jsx)(n.p,{children:"The cluster supports all inference patterns provided by the inference charts:"}),"\n",(0,i.jsx)(n.h5,{id:"vllm-deployments",children:"vLLM Deployments"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Direct vLLM deployment using Kubernetes Deployment"}),"\n",(0,i.jsx)(n.li,{children:"Suitable for single-node inference workloads"}),"\n",(0,i.jsx)(n.li,{children:"Supports both GPU and Neuron accelerators"}),"\n"]}),"\n",(0,i.jsx)(n.h5,{id:"ray-vllm-deployments",children:"Ray-vLLM Deployments"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Distributed vLLM on Ray Serve"}),"\n",(0,i.jsx)(n.li,{children:"Automatic scaling based on workload demand"}),"\n",(0,i.jsx)(n.li,{children:"Advanced observability with Prometheus/Grafana integration"}),"\n",(0,i.jsx)(n.li,{children:"Topology-aware scheduling for optimal performance"}),"\n"]}),"\n",(0,i.jsx)(n.h5,{id:"aibrix-deployments",children:"AIBrix Deployments"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"AIBrix backed LLM deployments"}),"\n",(0,i.jsx)(n.li,{children:"Efficient LLM routing for multiple replicas"}),"\n",(0,i.jsx)(n.li,{children:"Supports mixed GPU and Neuron accelerators"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"example-deployments",children:"Example Deployments"}),"\n",(0,i.jsx)(n.p,{children:"Once your cluster is ready, you can deploy inference workloads:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Navigate to inference charts\ncd ../../../blueprints/inference/inference-charts\n\n# Create Hugging Face token secret\nkubectl create secret generic hf-token --from-literal=token=your_hf_token\n\n# Deploy GPU Ray-vLLM with Llama model\nhelm install llama-inference . \\\n  --values values-llama-32-1b-ray-vllm.yaml\n\n# Deploy Neuron vLLM with optimized model\nhelm install neuron-inference . \\\n  --values values-llama-31-8b-vllm-neuron.yaml\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Please check the ",(0,i.jsx)(n.a,{href:"/ai-on-eks/docs/blueprints/inference/inference-charts",children:"inference charts"})," section for a deeper look at what is\navailable."]}),"\n",(0,i.jsx)(n.h3,{id:"observability-integration",children:"Observability Integration"}),"\n",(0,i.jsx)(n.p,{children:"The infrastructure provides comprehensive observability for inference workloads:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Prometheus Metrics"}),": Automatic collection of inference metrics"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Grafana Dashboards"}),": Pre-configured dashboards for Ray and vLLM"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Log Aggregation"}),": Centralized logging with Fluent Bit"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"GPU/Neuron Monitoring"}),": Hardware utilization metrics"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Access Grafana dashboard:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"kubectl port-forward -n monitoring svc/kube-prometheus-stack-grafana 3000:80\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Please see the ",(0,i.jsx)(n.a,{href:"/ai-on-eks/docs/guidance/observability",children:"observability"})," for an in-depth look at using the observability\nfeatures."]}),"\n",(0,i.jsx)(n.h3,{id:"cost-optimization",children:"Cost Optimization"}),"\n",(0,i.jsx)(n.p,{children:"The cluster includes several cost optimization features:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Karpenter Autoscaling"}),": Automatic node provisioning and deprovisioning"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Spot Instance Support"}),": Configure node groups to use spot instances"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Topology Awareness"}),": Efficient resource utilization across AZs"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Resource Limits"}),": Proper resource requests and limits for workloads"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,i.jsx)(n.p,{children:"This section covers common issues you may encounter when deploying and operating the inference-ready EKS cluster, along\nwith detailed solutions and diagnostic steps."}),"\n",(0,i.jsx)(n.h3,{id:"deployment-issues",children:"Deployment Issues"}),"\n",(0,i.jsx)(n.h4,{id:"1-terraform-apply-failures",children:"1. Terraform Apply Failures"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Symptoms:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Terraform fails during ",(0,i.jsx)(n.code,{children:"terraform apply"})," with resource creation errors"]}),"\n",(0,i.jsx)(n.li,{children:"Module-specific failures during sequential deployment"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Common Causes & Solutions:"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Insufficient AWS Permissions:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Verify your AWS credentials and permissions\naws sts get-caller-identity\naws iam get-user\n\n# Required permissions include:\n# - EKS cluster creation and management\n# - EC2 instance management\n# - VPC and networking resources\n# - IAM role creation and attachment\n# - KMS key management\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Service Quota Limits:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Check EC2 service quotas\naws service-quotas get-service-quota --service-code ec2 --quota-code L-1216C47A  # Running On-Demand instances\naws service-quotas get-service-quota --service-code ec2 --quota-code L-34B43A08  # Running On-Demand G instances\naws service-quotas get-service-quota --service-code ec2 --quota-code L-6E869C2A  # Running On-Demand Inf instances\n\n# Request quota increases if needed\naws service-quotas request-service-quota-increase --service-code ec2 --quota-code L-34B43A08 --desired-value 32\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Region Availability:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Verify instance types are available in your region\naws ec2 describe-instance-type-offerings --location-type availability-zone --filters Name=instance-type,Values=g5.xlarge,inf2.xlarge\n"})}),"\n",(0,i.jsx)(n.h4,{id:"2-eks-cluster-creation-issues",children:"2. EKS Cluster Creation Issues"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Symptoms:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:'EKS cluster fails to create or becomes stuck in "CREATING" state'}),"\n",(0,i.jsx)(n.li,{children:"Node groups fail to join the cluster"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Diagnostic Steps:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Check cluster status\naws eks describe-cluster --name inference-cluster --region us-west-2\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Common Solutions:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Ensure VPC has sufficient IP addresses across 4 availability zones"}),"\n",(0,i.jsx)(n.li,{children:"Verify NAT Gateway creation in public subnets"}),"\n",(0,i.jsx)(n.li,{children:"Check security group configurations allow required EKS communication"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"node-and-pod-issues",children:"Node and Pod Issues"}),"\n",(0,i.jsx)(n.h4,{id:"3-pods-stuck-in-pending-state",children:"3. Pods Stuck in Pending State"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Symptoms:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:'Inference workloads remain in "Pending" status'}),"\n",(0,i.jsx)(n.li,{children:"Karpenter not provisioning nodes"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Diagnostic Commands:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Check pod events and resource requests\nkubectl describe pod <pod-name> -n <namespace>\n\n# Check Karpenter logs\nkubectl logs -n karpenter deployment/karpenter\n\n# Check available nodes and their capacity\nkubectl get nodes -o wide\nkubectl describe nodes\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Common Causes & Solutions:"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Insufficient GPU/Neuron Quotas:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Verify Karpenter NodePool configurations\nkubectl get nodepool -o yaml\n"})}),"\n",(0,i.jsx)(n.h4,{id:"4-gpu-detection-and-device-plugin-issues",children:"4. GPU Detection and Device Plugin Issues"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Symptoms:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"GPU nodes show 0 allocatable GPUs"}),"\n",(0,i.jsx)(n.li,{children:"NVIDIA device plugin not running"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Diagnostic Steps:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Verify GPU visibility on nodes\nkubectl get nodes -o json | jq '.items[] | {name: .metadata.name, gpus: .status.allocatable[\"nvidia.com/gpu\"]}'\n\n# Check node labels\nkubectl get nodes --show-labels | grep gpu\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Restart NVIDIA device plugin if needed\nkubectl delete pods -n nvidia-device-plugin -l app.kubernetes.io/name=nvidia-device-plugin\n"})}),"\n",(0,i.jsx)(n.h4,{id:"5-aws-neuron-setup-issues",children:"5. AWS Neuron Setup Issues"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Symptoms:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Neuron devices not detected on inf2/trn1 instances"}),"\n",(0,i.jsx)(n.li,{children:"Neuron device plugin failing"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Diagnostic Commands:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Check Neuron device plugin\nkubectl get pods -n kube-system | grep neuron\n\n# Verify Neuron devices\nkubectl get nodes -o json | jq '.items[] | {name: .metadata.name, neuron: .status.allocatable[\"aws.amazon.com/neuron\"]}'\n\n# Check Neuron scheduler\nkubectl get pods -n kube-system | grep my-scheduler\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Verify Neuron runtime installation\nkubectl describe node <inf2-node> | grep neuron\n\n# Check Neuron device plugin logs\nkubectl logs -n kube-system <neuron-device-plugin-pod>\n"})}),"\n",(0,i.jsx)(n.h3,{id:"model-deployment-issues",children:"Model Deployment Issues"}),"\n",(0,i.jsx)(n.h4,{id:"6-model-download-failures",children:"6. Model Download Failures"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Symptoms:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Pods fail to start with image pull or model download errors"}),"\n",(0,i.jsx)(n.li,{children:"Hugging Face authentication failures"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Diagnostic Steps:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Check pod logs for download errors\nkubectl logs <pod-name> -n <namespace>\n\n# Verify Hugging Face token secret\nkubectl get secret hf-token -o yaml\nkubectl get secret hf-token -o jsonpath='{.data.token}' | base64 -d\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Recreate Hugging Face token secret\nkubectl delete secret hf-token\nkubectl create secret generic hf-token --from-literal=token=<your-hf-token>\n\n# Check internet connectivity from pods\nkubectl run test-pod --image=curlimages/curl -it --rm -- curl -I https://huggingface.co\n"})}),"\n",(0,i.jsx)(n.h4,{id:"7-out-of-memory-oom-issues",children:"7. Out of Memory (OOM) Issues"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Symptoms:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Pods getting killed with OOMKilled status"}),"\n",(0,i.jsx)(n.li,{children:"Models failing to load completely"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Diagnostic Commands:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Check pod resource usage\nkubectl top pods -n <namespace>\n\n# Check node memory usage\nkubectl top nodes\n\n# Review pod events for OOM kills\nkubectl get events --field-selector reason=OOMKilling\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Increase instance type to get larger GPU\n# Consider using larger instance types or model sharding\n"})}),"\n",(0,i.jsx)(n.h3,{id:"networking-and-load-balancer-issues",children:"Networking and Load Balancer Issues"}),"\n",(0,i.jsx)(n.h4,{id:"8-service-connectivity-problems",children:"8. Service Connectivity Problems"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Symptoms:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Cannot access inference endpoints"}),"\n",(0,i.jsx)(n.li,{children:"Load balancer not provisioning"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Diagnostic Steps:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Check service status\nkubectl get svc -A\n\n# Check AWS Load Balancer Controller\nkubectl logs -n kube-system deployment/aws-load-balancer-controller\n\n# Verify security groups and NACLs\naws ec2 describe-security-groups --filters "Name=group-name,Values=*inference-cluster*"\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Restart AWS Load Balancer Controller\nkubectl rollout restart deployment/aws-load-balancer-controller -n kube-system\n\n# Check ingress annotations and configurations\nkubectl describe ingress <ingress-name>\n"})}),"\n",(0,i.jsx)(n.h3,{id:"monitoring-and-observability-issues",children:"Monitoring and Observability Issues"}),"\n",(0,i.jsx)(n.h4,{id:"9-prometheusgrafana-not-working",children:"9. Prometheus/Grafana Not Working"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Symptoms:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Monitoring dashboards not accessible"}),"\n",(0,i.jsx)(n.li,{children:"Metrics not being collected"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Diagnostic Commands:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Check monitoring stack pods\nkubectl get pods -n monitoring\n\n# Check Prometheus targets\nkubectl port-forward -n monitoring svc/kube-prometheus-stack-prometheus 9090:9090\n# Navigate to http://localhost:9090/targets\n\n# Check Grafana access\nkubectl port-forward -n monitoring svc/kube-prometheus-stack-grafana 3000:80\n# Navigate to http://localhost:3000\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Restart monitoring components\nkubectl rollout restart deployment/kube-prometheus-stack-grafana -n monitoring\n\n# Check service monitors\nkubectl get servicemonitor -A\n"})}),"\n",(0,i.jsx)(n.h3,{id:"performance-and-scaling-issues",children:"Performance and Scaling Issues"}),"\n",(0,i.jsx)(n.h4,{id:"10-slow-model-inference",children:"10. Slow Model Inference"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Symptoms:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"High latency in model responses"}),"\n",(0,i.jsx)(n.li,{children:"Poor throughput performance"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Diagnostic Steps:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Check resource utilization\nkubectl top pods -n <namespace> --containers\n\n# Monitor GPU utilization (if using GPUs)\nkubectl exec -it <pod-name> -- nvidia-smi\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Verify model is using appropriate hardware acceleration"}),"\n",(0,i.jsx)(n.li,{children:"Check if multiple models are competing for resources"}),"\n",(0,i.jsx)(n.li,{children:"Optimize model parameters for latency"}),"\n",(0,i.jsx)(n.li,{children:"Scale up model and use load balancing"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"general-debugging-commands",children:"General Debugging Commands"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Get cluster information\nkubectl cluster-info\nkubectl get nodes -o wide\n\n# Check all system pods\nkubectl get pods -A | grep -v Running\n\n# View recent events\nkubectl get events --sort-by='.lastTimestamp' -A\n\n# Check Karpenter provisioning\nkubectl logs -n karpenter deployment/karpenter --tail=100\n\n# Verify EKS add-ons\naws eks describe-addon --cluster-name inference-cluster --addon-name vpc-cni\n"})}),"\n",(0,i.jsx)(n.h3,{id:"getting-additional-help",children:"Getting Additional Help"}),"\n",(0,i.jsx)(n.p,{children:"If you continue to experience issues:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Check AWS Service Health"}),": Visit the ",(0,i.jsx)(n.a,{href:"https://status.aws.amazon.com/",children:"AWS Service Health Dashboard"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Review CloudWatch Logs"}),": Check EKS control plane logs in CloudWatch"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Consult Documentation"}),": Refer to\nthe ",(0,i.jsx)(n.a,{href:"https://docs.aws.amazon.com/eks/latest/userguide/troubleshooting.html",children:"EKS Troubleshooting Guide"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Community Support"}),": Post questions in the ",(0,i.jsx)(n.a,{href:"https://github.com/awslabs/ai-on-eks/issues",children:"AI on EKS GitHub Issues"})]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);